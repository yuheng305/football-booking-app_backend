import { Injectable, UnauthorizedException } from '@nestjs/common';
import { JwtService } from '@nestjs/jwt';

@Injectable()
export class AuthService {
  constructor(private readonly jwtService: JwtService) {}

  // ðŸ›  Fake user dá»¯ liá»‡u cá»©ng
  private readonly fakeUser = {
    username: 'admin',
    password: '123456',
    userId: '1',
  };

  // ðŸ›  HÃ m login Ä‘á»ƒ xÃ¡c thá»±c vÃ  tráº£ JWT
  async login(username: string, password: string) {
    if (username !== this.fakeUser.username || password !== this.fakeUser.password) {
      throw new UnauthorizedException('TÃ i khoáº£n hoáº·c máº­t kháº©u khÃ´ng Ä‘Ãºng');
    }

    const payload = { username: this.fakeUser.username, sub: this.fakeUser.userId };
    return {
      access_token: this.jwtService.sign(payload),
    };
  }
}
